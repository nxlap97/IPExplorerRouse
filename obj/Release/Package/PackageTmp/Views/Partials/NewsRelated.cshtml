@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System.Text.RegularExpressions;

@{
                var itemImage = "";
            	 if (Model.HasValue("newsImage"))
                 {
                        itemImage = Model.Value<IPublishedContent>("newsImage").Url;
                                                
                 }

}


@functions {
 public static int CountWord(string content)
{
    string pattern = "[^\\w]";
  
    string[] words = null;
    int i = 0;
    int count = 0;
  
    words = Regex.Split(content, pattern, RegexOptions.IgnoreCase);
    for (i = words.GetLowerBound(0); i <= words.GetUpperBound(0); i++) {
        if (words[i].ToString() == string.Empty) {
         count = count - 1;
        }
           
        count = count + 1;
    }
    
    return count;
    
  
}
 public static string EstimateTimeToRead(int number)
{
    
    int wordPerMin = 250; 
    int result = number/wordPerMin;
    
    if (result == 0 ) {
        result =  1;
    }
    
    if (result > 10) {
        result = result - 3;
    } 
    
    if (result > 1) {
        return result + " minutes read";
    
    } else {
         return result + " minute read";
    }
}
}


@if (!Request.Browser.IsMobileDevice)
{
   
 
    	 <!-- A Item  -->
	<div class="col-xs-12 col-md-6 col-lg-4 item item-news" style="background-image:url('@itemImage')">
		<div class="item-content item-content-news">
		<div class="title"><a href="@Model.Url">@Model.Value("newsTitle")</a></div>
		  @if (Model.Value("newsSummary") != "" && Model.Value("newsSummary") != null && Model.Value("newsSummary").ToString().Length > 0){
                    <div class="description">
                          @Model.Value("newsSummary")
                           
                    </div>
                    } 
			<p class="time">@EstimateTimeToRead(CountWord(Model.Value("newsContent").ToString()))</p>
			<p class="author"></p>
			<a href="@Model.Url" class="readmore">READ MORE <i class="fas fa-chevron-right arrow arrow-1"></i><i class="fas fa-chevron-right arrow arrow-2"></i><i class="fas fa-chevron-right arrow arrow-3"></i></a>
			<p class="datetime">@Model.CreateDate.ToString("dd MMM yyyy", null)</p>
			<ul class="tags-list">
                        @foreach (var tag in Model.Value<string[]>("newsHashtag").Take(4)) {
                          <li>#@tag</li>
                        }
                      
            </ul>
		</div>
	</div>
    <!-- End Item -->
    
} else {
       <!-- A Item  -->
	<div class="item item-news" style="background-image: url('@itemImage');">
		<div class="item-content news-content-box">
		<div class="title"><a href="@Model.Url">@Model.Value("newsTitle")</a></div>
		<div class="description">
		    	@Model.Value("newsContent")
		</div>
			<p class="datetime">@Model.CreateDate.ToString("dd MMM yyyy", null)</p>
			<p class="author"></p>
			<a href="@Model.Url" class="readmore">READ MORE &nbsp; <i class="fas fa-chevron-right arrow arrow-1"></i><i class="fas fa-chevron-right arrow arrow-2"></i><i class="fas fa-chevron-right arrow arrow-3"></i></a>
		
		
		</div>
	</div>
    <!-- End Item -->
}


