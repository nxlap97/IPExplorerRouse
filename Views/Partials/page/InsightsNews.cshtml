@inherits Umbraco.Web.Mvc.UmbracoViewPage
@using System.Text.RegularExpressions;
 @{
      var space = ", ";
	  IEnumerable<IPublishedElement> authorList; 
	  var countAuthor = 0; 
	  
	   var imageNews = "";
	    try {
                            if (Model.Value<IPublishedContent>("newsImage") != null)
                            {

                                if (Model.Value<IPublishedContent>("newsImage").GetCropUrl("InsightsItem") != null)
                                {
                                    imageNews = Model.Value<IPublishedContent>("newsImage").GetCropUrl("InsightsItem").ToString();
                                }
                                else
                                {
                                    imageNews = Model.Value<IPublishedContent>("newsImage").Url.ToString();
                                }
                            }

                        } catch (Exception e)
                        {
                            imageNews = "";

                        }
                        
                        
                          var title ="";
    		       var newsSummary = "";
    		       try {
    		           title =  (Model.Value("newsTitle").ToString().Length > 80) ? Model.Value("newsTitle").ToString() : Model.Value("newsTitle").ToString();
    		           newsSummary =  (Model.Value("newsSummary").ToString().Length > 120) ? Model.Value("newsSummary").ToString(): Model.Value("newsSummary").ToString();
    		       } catch (Exception e) {
    		              
    		       }
                        
                        
                        
}

@functions {
 public static int CountWord(string content)
{
    string pattern = "[^\\w]";
  
    string[] words = null;
    int i = 0;
    int count = 0;
  
    words = Regex.Split(content, pattern, RegexOptions.IgnoreCase);
    for (i = words.GetLowerBound(0); i <= words.GetUpperBound(0); i++) {
        if (words[i].ToString() == string.Empty) {
         count = count - 1;
        }
           
        count = count + 1;
    }
    
    return count;
    
  
}
public static string EstimateTimeToRead(int number)
{
    
    int wordPerMin = 250; 
    int result = number/wordPerMin;
    
    if (result == 0 ) {
        result =  1;
    }
    
    if (result > 10) {
        result = result - 3;
    } 
    
    if (result > 1) {
        return result + " minute read";
    
    } else {
         return result + " minute read";
    }
}
}

    
    
   
                       
          @if (!Request.Browser.IsMobileDevice)
         {

         
        
            <!-- A Item  -->
            <div class="col-xs-12 col-md-6 col-lg-6 item item-news lastest-ip-news"  style="background-image:url('@imageNews')">
                <div class="item-content item-content-news" >
                    <div class="title"><a href="@Model.Url">@title</a></div>
                    @if( newsSummary != "" ) {
                     <div class="description">
                     @Html.Raw(HttpUtility.HtmlDecode(@newsSummary))
                    </div>
                    }
                   
                    <p class="time">@EstimateTimeToRead(CountWord(Model.Value("newsContent").ToString())) </p>
                    <p class="author">
                     @{
                        
                             countAuthor = 0; 
                             
                             authorList  = Model.Value<IEnumerable<IPublishedElement>>("newsAuthor");
                                if (authorList != null ) {
                                    countAuthor =  authorList.Count();
                              }                     
                     }
                    @if (countAuthor > 0 ) {
                      foreach (IPublishedContent author in authorList.Take(3) ) {
                      var urlImage = ""; 
                      try {
                          if ( author.Value<IPublishedContent>("profileImage") != null)
                         {
                                urlImage = author.Value<IPublishedContent>("profileImage").Url;
                                                        
                         }
                      } catch (Exception e) {
                        urlImage = ""; 
                      }
                     
                         if (author != authorList.First()) {
                             @space  @author.Value("profileName")
                         } else {
                             @author.Value("profileName")
                         }
                         
                          
                    }
                    }
                </p>
                    <a href="@Model.Url" class="readmore">READ MORE <i class="fas fa-chevron-right arrow arrow-1"></i><i class="fas fa-chevron-right arrow arrow-2"></i><i class="fas fa-chevron-right arrow arrow-3"></i></a>
                    <p class="datetime">@Model.CreateDate.ToString("dd MMM yyyy", null)</p>
                   	<ul class="tags-list">
                   	    @if ( Model.HasValue("newsHashtag") &&  Model.Value<string[]>("newsHashtag") != null && Model.Value<string[]>("newsHashtag").Count() > 0 ) {
                   	    @*    foreach (var tag in Model.Value<string[]>("newsHashtag").Take(4)) {
                          <li>#@tag</li>
                        }*@
                        
                                                     foreach (var tag in Model.Value<string[]>("newsHashtag").Take(4))
                        {
                            string[] words = tag.Split(' ');
                            int number = words.Length;
                            List<string> wordLast = new List<string>();
                            for (int i = 0; i < number; i++)
                            {
                                string a = words[i].Substring(0, 1).ToUpper() + words[i].Substring(1) + "+";
                                wordLast.Add(a);
                            }
                            string combindedString = string.Join(Environment.NewLine, wordLast);
                            <li><a href="/insights?tag=@(combindedString.Remove(combindedString.Length-1,1))">#@tag.ToLower() </a></li>
                        }
                   	    }
                       
                      
            </ul>
                </div>
            </div>
            <!-- End Item -->
    

       

} else {
         <!-- A Item  -->
            <div class="item item-news"  style="background-image:url('@imageNews')">
                <div class="item-content news-content-box" >
                    <div class="title"><a href="@Model.Url">@title</a></div>
                      @if( newsSummary != "" ) {
                     <div class="description">
                      @Html.Raw(newsSummary)
                    </div>
                    }
                     <p class="datetime">@Model.CreateDate.ToString("dd MMM yyyy", null)</p>
                     <p class="author">
                     @{
                        
                             countAuthor = 0; 
                             
                             authorList  = Model.Value<IEnumerable<IPublishedElement>>("newsAuthor");
                                if (authorList != null ) {
                                    countAuthor =  authorList.Count();
                              }                     
                     }
                    @if (countAuthor > 0 ) {
                      foreach (IPublishedContent author in authorList.Take(3) ) {
                      var urlImage = ""; 
                      try {
                        if ( author.Value<IPublishedContent>("profileImage") != null)
                         {
                                urlImage = author.Value<IPublishedContent>("profileImage").Url;
                                                        
                         }
                      } catch (Exception e) {
                        urlImage = "";
                      }
                     
                         if (author != authorList.First()) {
                             @space  @author.Value("profileName")
                         } else {
                             @author.Value("profileName")
                         }
                         
                          
                    }
                    }
                </p>
                    
                    <a href="@Model.Url" class="readmore">READ MORE   &nbsp;  <i class="fas fa-chevron-right arrow arrow-1"></i><i class="fas fa-chevron-right arrow arrow-2"></i><i class="fas fa-chevron-right arrow arrow-3"></i></a>
                   
                   
                </div>
            </div>
            <!-- End Item -->
  
}

  