@inherits WebViewPage<Umbraco.Forms.Web.Models.FormViewModel>
@using Umbraco.Forms.Core.Enums
@using Umbraco.Forms.Mvc
@using Umbraco.Forms.Mvc.Models
@using Umbraco.Forms.Mvc.BusinessLogic


@{ 
    // here we load in the needed default assets for the form
    // this means that 3rd party themes can override these by implementing their own form.cshtml file
    //it will simply hook into standard way forms load assets
    if (Model.DisableDefaultStylesheet == false)
    {
        Html.SetFormThemeCssFile(Model, "~/App_Plugins/UmbracoForms/Assets/Themes/Default/style.css");
    }
}


<div class="umbraco-forms-page subscribe-customer-footer">

    @if (string.IsNullOrEmpty(Model.CurrentPage.Caption) == false)
    {
        <h4 class="umbraco-forms-caption">@Model.CurrentPage.Caption</h4>
    }

    @if (Model.ShowValidationSummary)
    {
        @Html.ValidationSummary(false)
    }


    @foreach (FieldsetViewModel fs in Model.CurrentPage.Fieldsets)
    {
        <fieldset class="umbraco-forms-fieldset" id="@fs.Id">

            @if (string.IsNullOrEmpty(fs.Caption) == false)
            {
            <legend>@fs.Caption</legend>
            }

            <div class="row" style="margin-left: 0px;">


              
                    @foreach (var c in fs.Containers)
                    {
                    <div class="umbraco-forms-container @(" col-md-" + c.Width) ">

                        @foreach (FieldViewModel f in c.Fields)
                        {
                        bool hidden = f.HasCondition && f.ConditionActionType == FieldConditionActionType.Show;

                        <div class="@Html.GetFormFieldWrapperClass(f.FieldTypeName) @f.CssClass" @{ if (hidden) { <text> style="display: none" </text>   } }>


                                @if (!string.IsNullOrEmpty(f.ToolTip))
                                {
                                    <span class="umbraco-forms-tooltip help-block">@f.ToolTip</span>
                                }

                                <div class="umbraco-forms-field-wrapper subscribe-form-field">

                                    @Html.Partial(FormThemeResolver.GetFieldView(Model, f), f)

                                    @if (Model.ShowFieldValidaton)
                                    {
                                        @Html.ValidationMessage(f.Id)
                                    }

                                </div>

                            </div>
                        }

                    </div>
                    }
               

             
                    @if (Model.IsMultiPage)
                    {
                    if (!Model.IsFirstPage)
                    {
                    <input id="submit-subscribe"  class="btn prev cancel"
                           type="submit"
                           value="@Model.PreviousCaption"
                           name="__prev" />
                    }

                    if (!Model.IsLastPage)
                    {
                    <input type="submit"
                           class="btn next"
                           value="@Model.NextCaption"
                           name="__next" />
                    }

                    if (Model.IsLastPage)
                    {
                    <input id="submit-subscribe"  type="submit"
                           class="btn primary"
                           value="@Model.SubmitCaption"
                           name="__next" />
                    }
                    }
                    else
                    {
                    <input id="submit-subscribe" type="submit"
                           class="btn primary subscribe-btn"
                           value="@Model.SubmitCaption"
                           name="__next" />
                    }
               
            </div>





</fieldset>
    }

    <div style="display: none">
        <input type="text" name="@Model.FormId.ToString().Replace("-", "")" />
    </div>


</div>

@Html.Partial("Forms/Themes/subscribe/ScrollToFormScript")