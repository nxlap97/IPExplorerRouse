@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.IPexRegister>
@using ContentModels = Umbraco.Web.PublishedModels;
@{
    Layout = "IPExMaster.cshtml";
    ViewBag.Title = "Register";
    var user = Members.GetCurrentMember();
    if (user != null)
    {
        Response.Redirect("/");
    }
}


<div class="container-desktop">
    <div class="d-flex">
        <div class="sidebar-right">
            <div class="logo">
                <img width="100" src="~/Assets/IPEx/images/logo.svg">
            </div>
            <div class="list-partner text-center">
                <div>Created and Powered by</div>
                <ul class="list-group list-group-vertical">
                    <li class="list-group-item">
                        <img class="img-fluid" width="117"
                             src="~/Assets/IPEx/images/ip-rouse.png" />
                    </li>
                    <li class="list-group-item">
                        <img class="img-fluid" width="111"
                             src="~/Assets/IPEx/images/inngotDesktop.svg" />
                    </li>
                    <li class="list-group-item">
                        <img class="img-fluid" width="182"
                             src="~/Assets/IPEx/images/fsipDesktop.svg" />
                    </li>
                    <li class="list-group-item">
                        <img class="img-fluid" width="210"
                             src="~/Assets/IPEx/images/UKGovDesktop.svg" />
                    </li>
                </ul>
            </div>
        </div>
        <div class="container-custom content-signup">
            <div class="d-flex flex-column w-100">
                <div class="language ml-auto">
                    <i class="fas fa-language"></i>
                    <span>English</span>
                </div>
                <wrapper>
                    <div class="text-center w-100">
                        <div class="form">
                            <div class="logo">
                                <img width="100" src="~/Assets/IPEx/images/logo.svg">
                            </div>
                            <div class="title text-left">@Model.Value("IPEX_registerTitle")</div>
                            <form class="needs-validation" action="/intangibles.html" novalidate>
                                <div class="form-group text-left">
                                    <div class="">
                                        <label for="validationCustom01">@Model.Value("IPEx_RegisterNameTitle")</label>
                                        <div class="input-validate">
                                            <input type="text" class="form-control txt-name" id="validationCustom01" value=""
                                                   placeholder="Name" required>
                                            <small class="text-danger text-blod validate-name"></small>
                                        </div>
                                        <!-- <div class="valid-feedback">
                                            Looks good!
                                        </div> -->
                                    </div>
                                    <div class="">
                                        <label for="validationCustom02">Email Address</label>
                                        <div class="input-validate">
                                            <input type="text" class="form-control txt-username" id="validationCustom02" value=""
                                                   placeholder="Email Address" required>
                                            <small class="text-danger text-blod validate-username"></small>
                                        </div>
                                        <!-- <div class="valid-feedback">
                                            Looks good!
                                        </div> -->
                                    </div>
                                    <div>
                                        <label for="validationCustom02">Password</label>
                                        <div class="password">
                                            <div class="input-validate">
                                                <input type="password" class="form-control  txt-password" id="validationCustom03"
                                                       value="" placeholder="Password" required>
                                                <small class="text-danger text-blod validate-password"></small>
                                                @*<small class="text-danger text-blod validate-result-message"></small>*@
                                            </div>
                                            <span class="pass-eye">
                                                @*<i class="far fa-eye"></i>*@
                                                <i class="far fa-eye-slash"></i>
                                            </span>
                                        </div>
                                        <!-- <div class="valid-feedback">
                                            Looks good!
                                        </div> -->
                                    </div>
                                </div>
                                <div class="action action-signUp">
                                    <div class="btn-group-custom">
                                        <a class="btn btn-custom w-100 btn-Allports text-white btn-register"
                                           style="border-radius: 10px;">
                                            @Model.Value("IPEx_RegisterBtnSignUpTitle")
                                        </a>
                                        <span>
                                            @Model.Value("IPEx_RegisterHasAccountTitle")
                                            <a class="color-Allports" href="@Model.Value("IPEx_RegisterBtnSignInLink")"> @Model.Value("IPEx_RegisterBtnSignInTitle")</a>
                                        </span>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </wrapper>
            </div>
        </div>
    </div>
    <footer class="footer-index">
        <div class="contact-name">Contact Us</div>
        <div class="contact-mail d-flex align-items-center">
            <i class="far fa-envelope mr-2"></i>ipexplorer@rouse.com
        </div>
    </footer>
</div>


@section Scripts{

    <script>
        $(document).ready(function () {
            $('.btn-register').click(function (e) {
                e.preventDefault();
                Register();
            });
            $(document).on('keypress', function (e) {
                if (e.which == 13) {
                    Register();
                }
            });
        });
        var lock = false;
        function Register() {
            if (lock)
                return;
          
            var password_validate_required = "Password is required";
            var username_validate_message = "Email is required";
            var name_validate_message = "Name is required";
            var result_validate_message = "has error";
            var email_validate_message = "Email invalid";
            var password_validate_message = "length requires 10 characters";
            $('.validate-password').text('');
            $('.validate-username').text('');
            $('.validate-name').text('');

            var success = true;
            var pattern = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{1,4}|[0-9]{1,3})(\]?)$/;

            if ($('.txt-username').val() != '') {
                if (!pattern.test($('.txt-username').val())) {
                    $('.validate-username').text(email_validate_message);
                    success = false;
                }
            }

            if ($('.txt-password').val() != '') {
                if ($('.txt-password').val().length < 10) {
                    $('.validate-password').text(password_validate_message);
                    success = false;
                }
            }

            if ($('.txt-name').val() == '') {
                $('.validate-name').text(name_validate_message);
                success = false;
            }

            if ($('.txt-password').val() == '') {
                $('.validate-password').text(password_validate_required);
                success = false;
            }

            if ($('.txt-username').val() == '') {
                $('.validate-username').text(username_validate_message);
                success = false;
            }
            if (!success) {
                return;
            }
             
            lock = true;
                var postData = {
                    Username: $('.txt-username').val(),
                    Password: $('.txt-password').val(),
                    Name: $('.txt-name').val(),
                    Email: $('.txt-username').val()
                }

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Register","IPExplorer")',
                    data: postData,
                    success: function (result) {
                       
                        if (!result.status) {
                            $('.validate-password').text(result.message);
                            lock = false;
                        }  
                        else
                            Notify();
                    },
                    dataType: 'Json'
                });
        }

        function Notify() {
            $.ajax({
                type: "POST",
                url: '@Url.Action("SendEmailActiveAccount", "IPExplorer")',
                data: { email: $('.txt-username').val()},
                success: function (result) {
                    if (result.status) {
                        window.location.href = '@Model.Value("IPEx_RegisterBtnSignUpLink")';
                    } else {
                        $('.validate-password').text(result.message);
                    }
                    lock = false;
                    },
                    dataType: 'Json'
                });
        }
    </script>

    <script>

        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

    </script>
}


